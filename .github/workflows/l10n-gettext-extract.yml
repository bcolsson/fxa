name: String extraction test
on:
  pull_request:
    paths:
      - 'packages/fxa-content-server/**'
jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Install Linux packages
        run: |
          sudo apt update
          sudo apt install gettext -y
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install global npm packages
        run: |
          npm install -g grunt-cli
      - name: Clone l10n repository
        uses: actions/checkout@v3
        with:
          repository: mozilla/fxa-content-server-l10n
          path: "fxa-l10n"
      - name: Clone FxA code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          path: "fxa-code"
      - name: Install npm packages
        run: |
          cd fxa-l10n
          npm install
      - name: Extract gettext strings and flag for review
        run: |
          cd fxa-code
          yarn workspaces focus fxa-content-server

          # Extract gettext
          cd ./packages/fxa-content-server
          npx grunt l10n-extract
          cd ../..

          # Get hash from PR commit.
          NEW_HASHES=$(python ../fxa-l10n/scripts/pot_checksum.py ./packages/fxa-content-server/locale/templates/)

          # Checkout base commit
          git fetch origin ${{ github.event.pull_request.base.sha }}
          git checkout ${{ github.event.pull_request.base.sha }}

          # Extract gettext
          cd ./packages/fxa-content-server
          npx grunt l10n-extract
          cd ../..

          # Get hash frome base commit
          OLD_HASHES=$(python ../fxa-l10n/scripts/pot_checksum.py ./packages/fxa-content-server/locale/templates/)

          # Compare hashes
          if [ "$NEW_HASHES" = "$OLD_HASHES" ]
          then
            echo "No changes found."
          else
             # get list of requested reviewers
            REVIEW_REQUESTS=$(gh pr view $PR_NUMBER --json reviewRequests | jq -r ".reviewRequests[].name")

            # check if fxa-l10n assigned as reviewer
            grep -q "fxa-l10n" <<< $REVIEW_REQUESTS
            CONTAINS_FXA_L10N=$?

            # get list of fxa-l10n reviewers (excluding non-l10n members)
            L10N_REVIEWERS=$(gh api -H "Accept: application/vnd.github+json" /orgs/mozilla/teams/fxa-l10n/members | jq -r '(.[].login | select(. != "clouserw"))')

            # get list of usernames for existing reviews of PR
            PR_REVIEWERS=$(gh pr view $PR_NUMBER --json reviews | jq -r ".reviews[].author.login")

            # check if L10N_REVIEWERS in PR_REVIEWERS
            while IFS= read -r line; do if grep -q "$line" <<< "$PR_REVIEWERS"; then true; return; fi; done <<< "$L10N_REVIEWERS" ; false
            CONTAINS_L10N_REVIEWER=$?

            # if fxa-l10n not assigned as reviewer and someone from REVIEWERS not in reviews
            if ! (exit $CONTAINS_FXA_L10N) && ! (exit $CONTAINS_L10N_REVIEWER); then
              # Add mozilla/fxa-l10n as reviewer for pull request if .pot file changes
              echo "New changes found, adding reviewer."
              gh pr edit $PR_NUMBER --add-reviewer mozilla/fxa-l10n
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.L10N_BUILDCHECK_GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
